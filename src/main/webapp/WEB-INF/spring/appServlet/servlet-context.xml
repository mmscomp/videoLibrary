<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/hibernateDB" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="jonam" />
		<beans:property name="validationQuery" value="SELECT 1"/>
		<beans:property name="testOnBorrow" value="true"/>
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.manoj.model.Person</beans:value>			
				<beans:value>com.manoj.model.Login</beans:value>
				<beans:value>com.manoj.model.Review</beans:value>
				<beans:value>com.manoj.model.Movie</beans:value>
				<beans:value>com.manoj.model.Action</beans:value>
				<beans:value>com.manoj.model.Comedy</beans:value>
				<beans:value>com.manoj.model.Drama</beans:value>
				<beans:value>com.manoj.model.Romantic</beans:value>

			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
  	<beans:bean id="personDao" class="com.manoj.dao.PersonDao">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="personService" class="com.manoj.service.PersonService">
		<beans:property name="PersonDao" ref="personDao"></beans:property>
	</beans:bean>
	<beans:bean id="loginDao" class="com.manoj.dao.LoginDao">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="loginService" class="com.manoj.service.LoginService">
		<beans:property name="loginDao" ref="loginDao"></beans:property>
	</beans:bean>

	<beans:bean id="movieDao" class="com.manoj.dao.MovieDao">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

  <beans:bean id="MovieService" class="com.manoj.service.MovieService">
		<beans:property name="movieDao" ref="movieDao"></beans:property>	
	</beans:bean>

	<beans:bean id="actionDao" class="com.manoj.dao.ActionDao">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="actionService" class="com.manoj.service.ActionService">
		<beans:property name="actionDao" ref="actionDao"></beans:property>
	</beans:bean>
	
	<beans:bean id="comedyDao" class="com.manoj.dao.ComedyDao">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="comedyService" class="com.manoj.service.ComedyService">
		<beans:property name="comedyDao" ref="comedyDao"></beans:property>
	</beans:bean>
	<beans:bean id="dramaDao" class="com.manoj.dao.DramaDao">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="dramaService" class="com.manoj.service.DramaService">
		<beans:property name="dramaDao" ref="dramaDao"></beans:property>
	</beans:bean>
	<beans:bean id="romanticDao" class="com.manoj.dao.RomanticDao">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="romanticService" class="com.manoj.service.RomanticService">
		<beans:property name="romanticDao" ref="romanticDao"></beans:property>
	</beans:bean>


	<context:component-scan base-package="com.manoj" >
	             <context:include-filter type="aspectj" expression="com.manoj.*" />
	                 </context:component-scan>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

</beans:beans>